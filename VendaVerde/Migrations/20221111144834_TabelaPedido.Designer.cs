// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VendaVerde.Models;

namespace VendaVerde.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221111144834_TabelaPedido")]
    partial class TabelaPedido
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VendaVerde.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoriaNome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaID = 1,
                            CategoriaNome = "Frutas",
                            Descricao = "Frutas de qualidade"
                        },
                        new
                        {
                            CategoriaID = 2,
                            CategoriaNome = "Verduras",
                            Descricao = "Verduras Saborosas"
                        },
                        new
                        {
                            CategoriaID = 3,
                            CategoriaNome = "Grãos",
                            Descricao = "Grãos Saudáveis"
                        },
                        new
                        {
                            CategoriaID = 4,
                            CategoriaNome = "Raízes",
                            Descricao = "Raízes fortes e nutritivas"
                        });
                });

            modelBuilder.Entity("VendaVerde.Models.DetalhePedido", b =>
                {
                    b.Property<int>("DetalhePedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("DetalhePedidoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("DetalhePedidos");
                });

            modelBuilder.Entity("VendaVerde.Models.ItemCarrinho", b =>
                {
                    b.Property<int>("ItemCarrinhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarrinhoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("ItemCarrinhoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensCarrinho");
                });

            modelBuilder.Entity("VendaVerde.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPedido")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PedidoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("VendaVerde.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlergiaInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InEstoque")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProdutoSemana")
                        .HasColumnType("bit");

                    b.Property<string>("MaisInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            ProdutoId = 1,
                            CategoriaID = 1,
                            Descricao = "Tomate vermelho e suculento",
                            ImagemUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/strawberrypie.jpg",
                            InEstoque = true,
                            IsProdutoSemana = false,
                            MaisInfo = "Tomate do tipo cereja",
                            Nome = "Tomate",
                            Preco = 5.50m,
                            ThumbnailUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/strawberrypiesmall.jpg"
                        },
                        new
                        {
                            ProdutoId = 2,
                            CategoriaID = 2,
                            Descricao = "Alface fresca e verdinha",
                            ImagemUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/pumpkinpiesmall.jpg",
                            InEstoque = true,
                            IsProdutoSemana = false,
                            MaisInfo = "Alface crespo",
                            Nome = "Alface",
                            Preco = 2.20m,
                            ThumbnailUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/pumpkinpiesmall.jpg"
                        },
                        new
                        {
                            ProdutoId = 3,
                            CategoriaID = 2,
                            Descricao = "Cenoura laranjinha",
                            ImagemUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/rhubarbpiesmall.jpg",
                            InEstoque = true,
                            IsProdutoSemana = false,
                            MaisInfo = "Cenoura madura",
                            Nome = "Cenoura",
                            Preco = 3.70m,
                            ThumbnailUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/rhubarbpiesmall.jpg"
                        },
                        new
                        {
                            ProdutoId = 4,
                            CategoriaID = 1,
                            Descricao = "Maçã docinho",
                            ImagemUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/cheesecake.jpg",
                            InEstoque = true,
                            IsProdutoSemana = false,
                            MaisInfo = "Maça importado",
                            Nome = "Maçã",
                            Preco = 1.10m,
                            ThumbnailUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/cheesecakesmall.jpg"
                        },
                        new
                        {
                            ProdutoId = 5,
                            CategoriaID = 3,
                            Descricao = "1kg",
                            ImagemUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/cheesecake.jpg",
                            InEstoque = true,
                            IsProdutoSemana = false,
                            MaisInfo = "Soja nacional",
                            Nome = "Soja",
                            Preco = 3.40m,
                            ThumbnailUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/cheesecakesmall.jpg"
                        },
                        new
                        {
                            ProdutoId = 6,
                            CategoriaID = 4,
                            Descricao = "1kg",
                            ImagemUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/cheesecake.jpg",
                            InEstoque = true,
                            IsProdutoSemana = false,
                            MaisInfo = "Macaxeira/Mandioca",
                            Nome = "Macaxeira",
                            Preco = 5.50m,
                            ThumbnailUrl = "https://gillcleerenpluralsight.blob.core.windows.net/files/cheesecakesmall.jpg"
                        });
                });

            modelBuilder.Entity("VendaVerde.Models.DetalhePedido", b =>
                {
                    b.HasOne("VendaVerde.Models.Pedido", "Pedido")
                        .WithMany("DetalhePedidos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VendaVerde.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VendaVerde.Models.ItemCarrinho", b =>
                {
                    b.HasOne("VendaVerde.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("VendaVerde.Models.Produto", b =>
                {
                    b.HasOne("VendaVerde.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
